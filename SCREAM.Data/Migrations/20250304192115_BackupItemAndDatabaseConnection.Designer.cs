// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCREAM.Data;

#nullable disable

namespace SCREAM.Data.Migrations
{
    [DbContext(typeof(ScreamDbContext))]
    [Migration("20250304192115_BackupItemAndDatabaseConnection")]
    partial class BackupItemAndDatabaseConnection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("SCREAM.Data.Entities.BackupItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BackupItem");

                    b.HasDiscriminator<string>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SCREAM.Data.Entities.DatabaseConnection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DatabaseConnections", (string)null);
                });

            modelBuilder.Entity("SCREAM.Data.Entities.EventItem", b =>
                {
                    b.HasBaseType("SCREAM.Data.Entities.BackupItem");

                    b.HasDiscriminator().HasValue("Event");
                });

            modelBuilder.Entity("SCREAM.Data.Entities.FunctionProcedureItem", b =>
                {
                    b.HasBaseType("SCREAM.Data.Entities.BackupItem");

                    b.HasDiscriminator().HasValue("FunctionProcedure");
                });

            modelBuilder.Entity("SCREAM.Data.Entities.TableDataItem", b =>
                {
                    b.HasBaseType("SCREAM.Data.Entities.BackupItem");

                    b.Property<long>("RowCount")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("TableData");
                });

            modelBuilder.Entity("SCREAM.Data.Entities.TableStructureItem", b =>
                {
                    b.HasBaseType("SCREAM.Data.Entities.BackupItem");

                    b.Property<string>("Engine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("TableStructure");
                });

            modelBuilder.Entity("SCREAM.Data.Entities.TriggerItem", b =>
                {
                    b.HasBaseType("SCREAM.Data.Entities.BackupItem");

                    b.HasDiscriminator().HasValue("Trigger");
                });

            modelBuilder.Entity("SCREAM.Data.Entities.ViewItem", b =>
                {
                    b.HasBaseType("SCREAM.Data.Entities.BackupItem");

                    b.HasDiscriminator().HasValue("View");
                });
#pragma warning restore 612, 618
        }
    }
}
